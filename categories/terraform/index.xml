<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>terraform on Aryido Tech Note</title><link>https://aryido.github.io/categories/terraform/</link><description>Recent content in terraform on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Dec 2022 19:31:26 +0800</lastBuildDate><atom:link href="https://aryido.github.io/categories/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform Move</title><link>https://aryido.github.io/posts/terraform/terraform-move/</link><pubDate>Sun, 04 Dec 2022 19:31:26 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terraform-move/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>隨著系統的擴充， Terraform 配置也會變得越來越複雜，這時可能會需要 Refactor，例如 :&lt;/p>
&lt;ul>
&lt;li>將某些 terraform resource 移動到其他 module&lt;/li>
&lt;li>change resource ID&lt;/li>
&lt;/ul>
&lt;p>這時候用 terraform plan 看一下，會發現 terraform 打算把原本的 resource 移除，然後重新建立一個新的 resource。但 resource 中間被刪掉，之後再造回來是會影響服務的。我們必須讓 Terraform 知道我只是重新命名，這就是 Terraform move 想做的事情。&lt;/p>
&lt;/blockquote></description></item><item><title>Terraform 實用技巧</title><link>https://aryido.github.io/posts/terraform/terraform-skill/</link><pubDate>Thu, 24 Nov 2022 23:07:42 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terraform-skill/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>最近很常寫 Terraform ，知道一些 terraform cli 指令可以幫助自己寫的更好，也在學習 Terraform 的過程中，把覺得值得記錄的一些注意事項 &amp;amp; 小技巧留在這裡。&lt;/p>
&lt;/blockquote></description></item><item><title>Terragrunt - 整理</title><link>https://aryido.github.io/posts/terraform/terragrunt-5/</link><pubDate>Thu, 06 Oct 2022 22:31:20 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terragrunt-5/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>基本上 terragrunt 的使用和 terraform 都一樣，所以才說 terragrunt 是一層 wrapper。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>terragrunt init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>terragrunt plan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>terragrunt apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>和 terraform 都一樣對吧 !&lt;/p>
&lt;/blockquote></description></item><item><title>Terragrunt - variables 精簡</title><link>https://aryido.github.io/posts/terraform/terragrunt-4/</link><pubDate>Wed, 05 Oct 2022 23:27:20 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terragrunt-4/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>變數管理也是一個讓 code 更加 DRY 的方式之一， terragrunt 有蠻多傳遞變數的方式，這邊舉例 inputs&lt;/p>
&lt;/blockquote></description></item><item><title>Terragrunt - provider 精簡</title><link>https://aryido.github.io/posts/terraform/terragrunt-3/</link><pubDate>Thu, 29 Sep 2022 22:40:07 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terragrunt-3/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Provide 是整個 terraform 最重要的元件，是決定要對哪一個平台操作 (e.g. AWS, Azure, gcp)，負責和雲端 API 的接口交互，可以在不了解 API 細節的情況下，通過 terraform 來編排資源。&lt;/p>
&lt;/blockquote></description></item><item><title>Terragrunt - Backend / State 設定自動化</title><link>https://aryido.github.io/posts/terraform/terragrunt-2/</link><pubDate>Tue, 27 Sep 2022 22:55:22 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terragrunt-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Terraform Backend 可將 Terraform State 存儲在雲端位置，例如 S3 bucket, azure blob storage, gcp cloud storage，並提供 lock 以防止 race conditions 。 Terragrunt 還進一步讓流程更簡便&amp;hellip;&lt;/p>
&lt;/blockquote></description></item><item><title>Terragrunt - Introduce</title><link>https://aryido.github.io/posts/terraform/terragrunt-1/</link><pubDate>Tue, 27 Sep 2022 20:45:15 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terragrunt-1/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Terragrunt 是 gruntwork 推出的一個 Terraform thin wrapper，在執行 Terraform 前可以先&lt;strong>調整&lt;/strong> root module 內的 .tf 檔案，保持程式碼的精簡，並提供許多額外的工具和框架幫助開發，藉此可以讓你的 IaC code 更貼近 DRY 原則。&lt;/p>
&lt;/blockquote></description></item><item><title>Terratag</title><link>https://aryido.github.io/posts/terraform/terratag/</link><pubDate>Wed, 21 Sep 2022 23:11:25 +0800</pubDate><guid>https://aryido.github.io/posts/terraform/terratag/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Terratag 是個 CLI 工具，可簡化 resource tag 的方式，允許將標籤應用於整個 Terraform 或 Terragrunt，對於 Terraform 社群來說，他們希望&lt;strong>集中化&lt;/strong>來標註 resource 而不是分別寫在每個resource內，以更方便的追蹤和管理&amp;hellip;&lt;/p>
&lt;/blockquote></description></item></channel></rss>