<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gcp on Aryido Tech Note</title><link>https://aryido.github.io/categories/gcp/</link><description>Recent content in gcp on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 17 Jun 2024 16:54:22 +0800</lastBuildDate><atom:link href="https://aryido.github.io/categories/gcp/index.xml" rel="self" type="application/rss+xml"/><item><title>GCP - Load-Balancer 架構簡介</title><link>https://aryido.github.io/posts/google-cloud/load-balancer/</link><pubDate>Mon, 17 Jun 2024 16:54:22 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/load-balancer/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>GCP load-balancer 透過平均分發流量到多個 server ，可以防止單一伺服器的過載，從而減少系統故障的風險；也因為只需透過配置單個負載平衡器對外 IP 地址和憑證，故可以達到降低維運成本的目的。目前有多種 Load Balancer 類型，若從 console 上，有由&lt;strong>流量類型&lt;/strong>大概分成了三個 :&lt;/p>
&lt;ul>
&lt;li>HTTP(S) load balancing&lt;/li>
&lt;li>TCP load balancing&lt;/li>
&lt;li>UPD load balancing&lt;/li>
&lt;/ul>
&lt;p>但實際上依照細部功能，還有分 Global 或 Regional 等地域性分類，總體設定蠻細緻的 :&lt;/p>
&lt;div class="figure fig-100" >
&lt;a class="fancybox" href="https://aryido.github.io/images/google-cloud/load-balancer-options.jpg" data-fancybox="">
&lt;img class="fig-img" src="https://aryido.github.io/images/google-cloud/load-balancer-options.jpg" >
&lt;/a>
&lt;/div>
&lt;/blockquote></description></item><item><title>GCP - Network Tag 概述</title><link>https://aryido.github.io/posts/google-cloud/network-tags/</link><pubDate>Sun, 02 Jun 2024 22:59:14 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/network-tags/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Network Tag 在 GCP 中只是一個簡單的字符串標示，&lt;strong>會簡稱為 Tag&lt;/strong> ，可附加到如 VM 或 Instance template 上，設計想法上是可以由這個標示，更有效地控制和管理 VM 的網路防火牆安全設定。 Network Tag 算是 GCP 比較特別的設計，其他雲端似乎沒有比較類似的對應，由於不是一個獨立的 cloud resource ，所以是無法單獨建立 Tag 的，但對於其關聯的 GCP Firewall Rules ，對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>AWS: Security Groups&lt;/li>
&lt;li>Azure: Network security groups&lt;/li>
&lt;/ul>
&lt;p>特別要注意的事情是在 GCP 中，Tag 和 Label 是不一樣的東西。通常 GCP 提到 tag 都是指 network tag 這個網路安全相關防火牆設定 ; 而 Label 是拿來作預算及資源管理使用。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - VPC Firewall Rules 概述</title><link>https://aryido.github.io/posts/google-cloud/firewall-rule/</link><pubDate>Sun, 02 Jun 2024 22:59:14 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/firewall-rule/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>GCP Firewall 提供精細的安全控制機制的雲端資源，可以讓資源管理者保護其 VPC 內資料，不會收到未經授權的訪問或者意外流出資料，從而提高安全性和隱私性。 GCP 防火牆其實是一個蠻大的類別，產品全稱是 Cloud Next Generation Firewall 簡稱 Cloud NGFW，其中基本可分成：&lt;/p>
&lt;ul>
&lt;li>Cloud NGFW Essentials&lt;/li>
&lt;li>Cloud NGFW Enterprise&lt;/li>
&lt;li>Cloud NGFW Standard&lt;/li>
&lt;/ul>
&lt;p>但通常在我們在 GCP 提到的防火牆，其實都是指最常用的 &lt;strong>Firewall-Rules 防火牆規則&lt;/strong> ，隸屬於 Cloud NGFW Essentials，只能應用在給定的 project 和指定的 VPC ; 如果想要把 Firewall-Rules 應用到 organization 下的其他 project 或者其他 VPC，則要使用 Firewall-Policies，本篇重點介紹 Firewall-Rules。&lt;/p>
&lt;/blockquote></description></item><item><title>Cloud NAT 概述</title><link>https://aryido.github.io/not-yet-finished/cloud-nat/</link><pubDate>Thu, 30 May 2024 18:52:24 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/cloud-nat/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>GCP - VPC 概述</title><link>https://aryido.github.io/posts/google-cloud/vpc/</link><pubDate>Thu, 30 May 2024 18:52:24 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/vpc/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Virtual Private Cloud 虛擬私有雲網路，簡寫為 VPC、網路、VPC Network、Network 都可以，是 Google 使用 &lt;a href="https://01.me/2014/03/networking-at-google/">Andromeda&lt;/a>(/ænˈdrɑː.mə.də/) 網路虛擬化技術實現的一個 global 的雲端資源，提供 GCP-VM、GKE、serverless workloads 和 App Engine 等等雲端服務的網路功能，讓 User 可以高自由度地建立、管理和優化網路架構。對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>Amazon VPC&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure Virtual Network&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>GCP-VPC 和 Amazon VPC 設計蠻不一樣的。GCP-VPC 是全球性的，只要在同一個 GCP-VPC 內，就算不同 region 也能使用 Internal IP ; 但如果是不同的 VPC ，就算在同一個地區 region 也不能互相通訊。而 Amazon VPC 是針對 Region 來設定的，只要跨 region 就不是內網的概念。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - Instance Template 概述</title><link>https://aryido.github.io/posts/google-cloud/instance-template/</link><pubDate>Fri, 24 May 2024 19:26:00 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/instance-template/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Instance Template 一個用於定義 VM instance 配置的模板，其中包括如 machine type、bootdisk、startup script 等等實例屬性，經常和 Instance Groups 結合使用來自動創建 VM instance。對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : Launch Template&lt;/li>
&lt;li>Microsoft Azure : 沒有直接類似的，需在 Virtual Machine Scale Sets 內直接設定 VM 所需參數設定&lt;/li>
&lt;/ul>
&lt;p>概念上就是做好 VM 的模板，讓 VM 啟動完成後直接就可以達到我們想要的狀態，從這個方向出發的話: Startup Script、Custom Image、Instance Template 都蠻類似的，等等都會介紹和比較一下。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - Compute Engine 概述</title><link>https://aryido.github.io/posts/google-cloud/compute-engine/</link><pubDate>Thu, 23 May 2024 23:26:00 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/compute-engine/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Compute Engine 是託管在 Google 雲端上基礎架構即服務 (IaaS) 產品，其他的稱呼還有 &lt;strong>compute engine instance&lt;/strong> 、 &lt;strong>virtual machine instance&lt;/strong> 、 &lt;strong>VM instance&lt;/strong>。 對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>EC2&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Virtual Machine&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>啟動前可以訂製自己需要的 Machine Type ，例如 CPU、memory、disk 等等；再來 Boot disk OS 也可自行選擇 Linux 、 Windows 等等操作系統；針對容器虛擬化，可能使用專門優化來運行容器的 Container-Optimized OS (COS) image 在虛擬機上啟動容器服務。最後關於&lt;strong>備份資料&lt;/strong>，GCP 也有提供相應的服務來面對災難發生時的處理。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP Cloud CDN</title><link>https://aryido.github.io/posts/google-cloud/gcp-cloud-cdn/</link><pubDate>Thu, 27 Jul 2023 23:26:32 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cloud-cdn/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>CDN 全名為 Content Delivery Network，是一種透過分散在不同地區的 server，用離使用者&lt;strong>最近的伺服器&lt;/strong>來傳送快取內容。而 Google Cloud CDN，就是借助 Google 分佈在&lt;strong>全球各地&lt;/strong>的網路節點，將內容以快取(Cache)形式預先儲存，以達到最快速的內容交付。以下是一個 CDN 的全球分布架構，如圖所示歐洲使用者可以從荷蘭的節點獲取資料，而不必透過跨大西洋電纜，到位於美國 host server 拿取資料。
&lt;div class="figure fig-100" >
&lt;a class="fancybox" href="https://aryido.github.io/images/google-cloud/cdn-global.jpg" data-fancybox="">
&lt;img class="fig-img" src="https://aryido.github.io/images/google-cloud/cdn-global.jpg" >
&lt;/a>
&lt;/div>
&lt;strong>Cloud CDN 會需要與 GCP-Load-Balancer 搭配使用&lt;/strong>，故建議可以先熟習 GCP 負載平衡器的基本用法和觀念。&lt;/p>
&lt;/blockquote></description></item><item><title>Google Cloud Firestore 簡介</title><link>https://aryido.github.io/posts/google-cloud/firestore/</link><pubDate>Mon, 27 Mar 2023 22:18:10 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/firestore/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud Firestore 是 Google 提供的一款雲端 NoSQL 資料庫。資料模型上簡單分成了 collection 、 document 結構，本質上也是 JSON 格式，但使用起來更直觀。Firestore 還具有即時同步資料的功能，也就是說一旦資料庫有異動，資料便會自動同步到相關的用戶端上（如手機 App）&lt;/p>
&lt;/blockquote></description></item><item><title>GCP Address 介紹</title><link>https://aryido.github.io/not-yet-finished/gcp-compuate-engine-address/</link><pubDate>Sat, 26 Nov 2022 23:20:50 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/gcp-compuate-engine-address/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>GCP 每個 vm instance 創建時，都會分配一個 internal IP，並且也可以選擇是否附加 external IP。 不管是 internal IP 或者是 external IP 其實都可以 static 化，把它固定下來使之不會變動。&lt;/p>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Auth Credentials</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-3/</link><pubDate>Sat, 22 Oct 2022 16:13:45 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-3/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>最近使用 gcloud CLI 時，有遇到自己錯誤理解的部分，是關於 gcloud 管理的兩組 credentials :&lt;/p>
&lt;ul>
&lt;li>gcloud auth application-default login&lt;/li>
&lt;li>gcloud auth login&lt;/li>
&lt;/ul>
&lt;p>這兩個到底有甚麼不同呢 ? 來記錄一下吧 ~&lt;/p>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Access Token</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-2/</link><pubDate>Sat, 17 Sep 2022 00:23:55 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>使用 GCP 時，都要登入雲端才能獲得授權。 gcloud CLI 提供了兩個方式：&lt;/p>
&lt;ul>
&lt;li>User account authorization&lt;/li>
&lt;li>Service account authorization&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Initialization GCP Project</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-1/</link><pubDate>Thu, 15 Sep 2022 23:13:26 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-1/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>gcloud CLI 可以用於創建和管理 gcp 資源的工具。雖然可以使用 CLI 從命令行或腳本，自動化執行許多常見的任務。但更多是會用例如 &lt;strong>Terraform&lt;/strong> 來部屬資源。故現在基本上用最多是在初始化&lt;/p>
&lt;ul>
&lt;li>&lt;strong>管理身份驗證(manage authentication)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>自定義本地配置(customize local configuration)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>這些和權限管理、project設定有關的功能。&lt;/p>
&lt;/blockquote></description></item></channel></rss>