<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gcp on Aryido Tech Note</title><link>https://aryido.github.io/categories/gcp/</link><description>Recent content in gcp on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Jul 2023 23:26:32 +0800</lastBuildDate><atom:link href="https://aryido.github.io/categories/gcp/index.xml" rel="self" type="application/rss+xml"/><item><title>GCP Cloud CDN</title><link>https://aryido.github.io/posts/google-cloud/gcp-cloud-cdn/</link><pubDate>Thu, 27 Jul 2023 23:26:32 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cloud-cdn/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>CDN 全名為 Content Delivery Network，是一種透過分散在不同地區的 server，用離使用者&lt;strong>最近的伺服器&lt;/strong>來傳送快取內容。而 Cloud CDN，就是借助 Google 分佈在全球各地的網路節點，內容將會以快取(Cache)形式預先儲存在 CDN 節點，以達到最快速的內容交付。 &lt;strong>Cloud CDN 會需要與 GCP-Load-Balancer 搭配使用&lt;/strong>，故建議可以先熟習 GCP 負載平衡器的基本用法和觀念。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP load-balancer 架構簡介</title><link>https://aryido.github.io/posts/google-cloud/gcp-load-balancer-introduction/</link><pubDate>Mon, 26 Jun 2023 23:47:00 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-load-balancer-introduction/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>GCP load-balancer 透過平均分發流量到多個 server ，可以防止單一伺服器的過載，從而減少系統故障的風險；也因為只需透過配置單個負載平衡器對外 IP 地址和憑證，故可以達到降低維運成本的目的。目前有多種 Load Balancer 類型，若從 console 上，有由&lt;strong>流量類型&lt;/strong>大概分成了三個 :&lt;/p>
&lt;ul>
&lt;li>HTTP(S) load balancing&lt;/li>
&lt;li>TCP load balancing&lt;/li>
&lt;li>UPD load balancing&lt;/li>
&lt;/ul>
&lt;p>但實際上依照細部功能，還有分 Global 或 Regional 等地域性分類，總體設定蠻細緻的 :&lt;/p>
&lt;div class="figure fig-100" >
&lt;a class="fancybox" href="https://aryido.github.io/images/google-cloud/load-balancer-options.jpg" data-fancybox="">
&lt;img class="fig-img" src="https://aryido.github.io/images/google-cloud/load-balancer-options.jpg" >
&lt;/a>
&lt;/div>
&lt;/blockquote></description></item><item><title>Google Cloud Firestore 簡介</title><link>https://aryido.github.io/posts/google-cloud/firestore/</link><pubDate>Mon, 27 Mar 2023 22:18:10 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/firestore/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud Firestore 是 Google 提供的一款雲端 NoSQL 資料庫。資料模型上簡單分成了 collection 、 document 結構，本質上也是 JSON 格式，但使用起來更直觀。Firestore 還具有即時同步資料的功能，也就是說一旦資料庫有異動，資料便會自動同步到相關的用戶端上（如手機 App）&lt;/p>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Auth Credentials</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-3/</link><pubDate>Sat, 22 Oct 2022 16:13:45 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-3/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>最近使用 gcloud CLI 時，有遇到自己錯誤理解的部分，是關於 gcloud 管理的兩組 credentials :&lt;/p>
&lt;ul>
&lt;li>gcloud auth application-default login&lt;/li>
&lt;li>gcloud auth login&lt;/li>
&lt;/ul>
&lt;p>這兩個到底有甚麼不同呢 ? 來記錄一下吧 ~&lt;/p>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Access Token</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-2/</link><pubDate>Sat, 17 Sep 2022 00:23:55 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>使用 GCP 時，都要登入雲端才能獲得授權。 gcloud CLI 提供了兩個方式：&lt;/p>
&lt;ul>
&lt;li>User account authorization&lt;/li>
&lt;li>Service account authorization&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Google Cloud CLI : Initialization GCP Project</title><link>https://aryido.github.io/posts/google-cloud/gcp-cli-1/</link><pubDate>Thu, 15 Sep 2022 23:13:26 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/gcp-cli-1/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>gcloud CLI 可以用於創建和管理 gcp 資源的工具。雖然可以使用 CLI 從命令行或腳本，自動化執行許多常見的任務。但更多是會用例如 &lt;strong>Terraform&lt;/strong> 來部屬資源。故現在基本上用最多是在初始化&lt;/p>
&lt;ul>
&lt;li>&lt;strong>管理身份驗證(manage authentication)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>自定義本地配置(customize local configuration)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>這些和權限管理、project設定有關的功能。&lt;/p>
&lt;/blockquote></description></item></channel></rss>