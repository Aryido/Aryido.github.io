<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>recursion on Aryido Tech Note</title><link>https://aryido.github.io/tags/recursion/</link><description>Recent content in recursion on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Sep 2023 20:03:48 +0800</lastBuildDate><atom:link href="https://aryido.github.io/tags/recursion/index.xml" rel="self" type="application/rss+xml"/><item><title>Merge Sort</title><link>https://aryido.github.io/posts/algorithm/merge-sort/</link><pubDate>Mon, 04 Sep 2023 20:03:48 +0800</pubDate><guid>https://aryido.github.io/posts/algorithm/merge-sort/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>&lt;strong>歸併排序 (Merge Sort)&lt;/strong> 算是比較優秀的排序算法，因為時間複雜度是 &lt;code>O(N log N)&lt;/code>；而選擇排序、冒泡排序、和插入排序時間複雜度則是&lt;code>O(N^2)&lt;/code>。 Merge Sort 的基本思想是&lt;strong>分治法 (Divide and conquer)&lt;/strong>，是將原問題分解為規模較小的子問題，然後逐一解決這些子問題之後，&lt;strong>合併這些子問題的答案&lt;/strong>，並建立原問題的答案。&lt;/p>
&lt;/blockquote></description></item><item><title>206. Reverse Linked List</title><link>https://aryido.github.io/posts/leetcode/leetcode206/</link><pubDate>Sun, 27 Aug 2023 19:47:15 +0800</pubDate><guid>https://aryido.github.io/posts/leetcode/leetcode206/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>反轉 Linked List 是一道經典的題目，可以用分別用 :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>指針 (iterative)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>遞迴 (recursive)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>兩種截然不同的風格來解答。個人認為是蠻好的題目，可以多寫幾次，並從各種不同的解答方式來說明思考，故在此筆記。要說簡單也不算，對於 recursive 解法一開始我覺得有點難理解 ! 雖然被歸類在 Easy，但我私心覺得蠻容易打擊第一次做的人的&amp;hellip;&lt;/p>
&lt;/blockquote></description></item></channel></rss>