<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serverless on Aryido Tech Note</title><link>https://aryido.github.io/tags/serverless/</link><description>Recent content in serverless on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Jul 2024 23:14:20 +0800</lastBuildDate><atom:link href="https://aryido.github.io/tags/serverless/index.xml" rel="self" type="application/rss+xml"/><item><title>GCP - Cloud Run 概述</title><link>https://aryido.github.io/posts/google-cloud/cloud-run/</link><pubDate>Sat, 13 Jul 2024 23:14:20 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/cloud-run/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud Run 是一套基於 Knative 的全代管無伺服器容器平台，也屬於 Google Cloud 中的 FaaS 服務，功能是可在 GCP 託管的環境中運行 &lt;strong>Container&lt;/strong> 且已經具有&lt;strong>高擴展性&lt;/strong>基礎架構。若從「無基礎建設的容器化平台（Containers without infrastructure）」的角度來說，對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>AWS App Runner&lt;/strong>、&lt;strong>Fargate&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure Container Apps&lt;/strong>、&lt;strong>Azure Container Instances&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Cloud Run 一個蠻大的好處是 : 如果已經把程式打包成 Container Image 鏡象檔，那就可以使用&lt;strong>任何程式語言&lt;/strong>來部署，但其實 &lt;strong>Container Image 化是可選的&lt;/strong>，如果使用的是 Go、Node.js、Python、Java 等等常用的語言，也可以直接使用 Source Code 的方式來部署，讓我們可以使用 FaaS 的概念去執行如 Web Server 比較大型一點的程式。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - Cloud Functions 概述</title><link>https://aryido.github.io/posts/google-cloud/cloud-functions/</link><pubDate>Fri, 12 Jul 2024 23:26:00 +0800</pubDate><guid>https://aryido.github.io/posts/google-cloud/cloud-functions/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud Functions 是一個&lt;strong>無伺服器的雲端執行環境&lt;/strong> (serverless execution environment)，會把寫出來的 code 完全託管給 GCP 並且無需配置任何 Infra 也不用管理任何 Servers 就可以執行了，對於程式設計師來說只需要專注在自己的程式邏輯即可，基本完全省去管理硬體的煩惱，為最標準的 &lt;strong>FaaS&lt;/strong> 類型服務。對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>AWS Lamda&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure Functions&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Cloud Functions 可以用 Java、Python、Node.js、Go 等常用 coding language 來撰寫，適用於部署單一化用途的程式，或用於連接擴展其他的 GCP 雲端服務，以 Events and triggers 為其核心設計思想。&lt;/p>
&lt;/blockquote></description></item></channel></rss>